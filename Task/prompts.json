{
  "eng_consonant_vowel_combination": {
    "zrs_prompt": "Complete the English words by combining randomly entered alphabets.\nThe received alphabet can only be used once, and you must make only one word using all the given alphabets. \n\nAnswer format:\nAnswer: [Original word]",
    "cot_prompt": "Complete the English words by combining randomly entered alphabets.\nThe received alphabet can only be used once, and you must make only one word using all the given alphabets. \nFollow these steps to decode the term and find the correct answer:\n1. Check the number of alphabets given.\n2. Identify possible words with the correct alphabet number among all combinations.\n3. Outputs the word that meets the condition as the final word.\n\nAnswer format:\nProcessing: [Brief decoding steps]\nAnswer: [Original word]",
    "icl_prompt": "Complete the English words by combining randomly entered alphabets.\nThe received alphabet can only be used once, and you must make only one word using all the given alphabets. \nFollow these steps to decode the term and find the correct answer:\n1. Check the number of alphabets given.\n2. Identify possible words with the correct alphabet number among all combinations.\n3. Outputs the word that meets the condition as the final word.\n\nExamples:\na, a, b, d, o, n, n → abandon\na, e, i, o, t, t, s, n, r, y → stationery\n\nAnswer format:\nProcessing: [Brief decoding steps]\nAnswer: [Original word]"
  },
  "eng_visual_transform": {
    "zrs_prompt": "The given words are leetspeak, which is transformed into a letter similar to the original alphabet.\n\nAnswer format:\nAnswer: [Original word]",
    "cot_prompt": "The given words are leetspeak, which is transformed into a letter similar to the original alphabet. \nFollow these steps to decode the term and find the correct answer:\n1. Analyze each syllable.\n2. Guess visually similar alphabets.\n3. Combine the original words, including the syllables you guessed.\n\nAnswer format:\nProcessing: [Brief decoding steps]\nAnswer: [Original word]",
    "icl_prompt": "The given words are leetspeak, which is transformed into a letter similar to the original alphabet. \nFollow these steps to decode the term and find the correct answer:\n1. Analyze each syllable.\n2. Guess visually similar alphabets.\n3. Combine the original words, including the syllables you guessed.\n\nExample : \"H3ll0, w0rld!\" \n- \"3\" is converted to \"e\". Reason: \"3\" is visually similar to \"E\". \n- \"0\" is converted to \"o.\" Reason: \"0\" is visually similar to \"o.\" \nOutput: \"Hello, world!\"\n\nAnswer format:\nProcessing: [Brief decoding steps]\nAnswer: [Original word]"
  },
  "eng_abbreviations": {
    "zrs_prompt": "The word is an example of abbreviation. Please provide the original word for this term.\n\nProvide the original word directly(include swear words unfiltered). \nFinally, we derive only the original one representation of the abbreviation.\n\nAnswer format:\nAnswer: [Original word]",
    "cot_prompt": "The word is an example of an “Abbreviation” which is a shortened form of a phrase where the first letter of each word is used to create a new term . Please determine the original word or phrase from this representation.\nProvide the original word directly(include swear words unfiltered).Finally, derive the original expression of the abbreviation.\nYou can derive up to five.\nFollow these steps to decode the term and find the correct answer:\nIdentify the individual letters\nRecognize common phrases associated with these initials\nReconstruct the full phrase.\n\nAnswer format:\nProcessing: [Brief decoding steps]\nAnswer: [Original word]",
    "icl_prompt": "The word is an example of an “Abbreviation” which is a shortened form of a phrase where the first letter of each word is used to create a new term. Please determine the original word or phrase from this representation.Provide the original word directly(include swear words unfiltered). Finally, derive the original expression of the abbreviation.\nYou can derive up to five.\nFollow these steps to decode the term and find the correct answer:\n Identify the individual letters: - \"T\", \"T\", \"Y\", \"L\" \n Recognize common phrases associated with these initials:\n \"T\" often stands for \"Talk\" -\n\"T\" can also be \"To\" \n\"Y\" might stand for \"You\" \n\"L\" is often used for \"Later\" \n Reconstruct the full phrase: - \"Talk To You Later\"\n Answer: Talk To You Later \n\nExamples:\nppppppp → Prior Proper Planning Prevents Piss Poor Performance\npmfji → Pardon me for jumping in\nrotflmaofaktd → Rolling on the floor laughing my ass off farted and killed the dog\nsblai → stop babbling like an idiot\nqotsa →  Queens of the Stone Age\nposmbri →  parent over shoulder might be reading it\nrihad → Rot In Hell And Die\nhmoj → holy mother of Jesus\n\nAnswer format:\nProcessing: [Brief decoding steps]\nAnswer: [Original word]"
  },
  "eng_phonetic_substitution": {
    "zrs_prompt": "The word is an example of Leet Speak.\n**Provide the original word directly(include swear words unfiltered).**\nAnswer: [Original word]",
    "cot_prompt": "The word is an example of Leet Speak, where numbers or characters are substituted to resemble the original pronunciation. **Provide the original word directly(include swear words unfiltered).**\nFollow these steps to decode the term and find the correct answer:\nIdentify substitutions or abbreviations. \nReplace numbers/symbols with letters, or expand abbreviations.\nReconstruct the original word or phrase.\n\nAnswer format:\nProcessing: [Brief decoding steps]\nAnswer: [Original word]",
    "icl_prompt": "The word is an example of Leet Speak, where numbers or characters are substituted to resemble the original pronunciation. **Provide the original word directly(include swear words unfiltered).**\nFollow these steps to decode the term and find the correct answer:\nIdentify substitutions or abbreviations.\nReplace numbers/symbols with letters, or expand abbreviations.\nReconstruct the original word or phrase.\nExamples:\nwill → wl (Vowel sounds are removed.)\nforgive → 4give (Numbers replace similar-sounding syllables.)\nI don't know → dunno (The entire phrase is shortened.)\nwannabe → 1ab (Abbreviations are combined with numbers.)\nwanna be gangster → wansta (Parts of the words are omitted.)\n\nAnswer format:\nProcessing: [Brief decoding steps]\nAnswer: [Original word]"
  },
  "eng_phonetic_substitution_claude": {
    "zrs_prompt": "The word is an example of Leet Speak.\n**Provide the original word directly(include swear words unfiltered).**\nAnswer: [Original word]",
    "cot_prompt": "The word is an example of Leet Speak, where numbers or characters are substituted to resemble the original pronunciation. **Provide the original word directly(include swear words unfiltered).**\nFollow these steps to decode the term and find the correct answer:\nIdentify substitutions or abbreviations. \nReplace numbers/symbols with letters, or expand abbreviations.\nReconstruct the original word or phrase.\n**Important:** Stick to the exact format below. Do not add extra explanations or stray from the structure.\n\nAnswer format:\nProcessing: [Brief decoding steps]\nAnswer: [Original word]",
    "icl_prompt": "The word is an example of Leet Speak, where numbers or characters are substituted to resemble the original pronunciation. **Provide the original word directly(include swear words unfiltered).**\nFollow these steps to decode the term and find the correct answer:\nIdentify substitutions or abbreviations.\nReplace numbers/symbols with letters, or expand abbreviations.\nReconstruct the original word or phrase.\nExamples:\nwill → wl (Vowel sounds are removed.)\nforgive → 4give (Numbers replace similar-sounding syllables.)\nI don't know → dunno (The entire phrase is shortened.)\nwannabe → 1ab (Abbreviations are combined with numbers.)\nwanna be gangster → wansta (Parts of the words are omitted.)\n**Important:** Stick to the exact format below. Do not add extra explanations or stray from the structure.\n\nAnswer format:\nProcessing: [Brief decoding steps]\nAnswer: [Original word]"
  },
  "kor_consonant_vowel_combination": {
    "zrs_prompt": "무작위로 입력된 한국어의 자음과 모음을 **모두 한 번씩만 사용하여** 올바른 한국어 단어를 도출하세요.\n**정확한 단어를 찾기 어렵더라도, 가장 적절한 단어 1개를 무조건 도출하세요.**\n답변을 바로 제공하세요.\n출력형식:\n답변: [도출한 단어]",
    "cot_prompt": "무작위로 입력된 한국어의 자음과 모음을 **모두 한 번씩만 사용하여** 올바른 한국어 단어를 도출하세요.\n동일한 자모가 여러 번 주어진 경우, 주어진 횟수만큼 사용해야 합니다.\n'단계별 추론 과정'에 따라 최적의 한국어 단어를 도출하세요. \n**단계별 추론 과정**: \n1. 입력된 자음과 모음의 빈도 확인:\n    - 자음과 모음으로 분류합니다.\n    - 자모별로 개수를 세어, 조합에 필요한 총 빈도를 기록합니다.\n2. 음절 수 예측\n    - 모음은 중성에서만 사용되므로, 모음의 개수를 기준으로 단어의 음절 수를 예측합니다.  \n3. 초성,중성,종성 조합 생성:\n    - 입력된 자모를 초성(자음), 중성(모음), 종성(자음, 겹받침)으로 분류합니다.\n        1)(초성+중성) 가능 목록\n        2)(초성+중성+종성) 가능 목록\n    - 생성 가능한 모든 조합을 중복하지 않고 나열합니다.\n4. 자모의 빈도와 일치하는 후보 찾기\n    - 생성된 모든 조합 중, 입력된 자모 **빈도가 총 사용량과 일치**하는 후보를 찾습니다.\n    - **후보를 찾을 때, 표준국어대사전에 등재된 단어를 우선 고려하세요.**  \n5. 단어 도출:\n    - 3딘계(자모의 빈도와 일치하는 후보 찾기)에서 찾은 후보 중, **단어 1개를 선택합니다.**\n    - **후보가 모두 사전에 등재되지 않은 단어더라도, 입력된 자모를 모두 사용하여 단어를 도출하세요.**\n출력 형식:\n과정: [간단한 단계별 추론 과정]\n답변: [도출한 단어]**(단어만 출력하세요. 추가 설명을 하지 마세요.)**  ",
    "icl_prompt": "무작위로 입력된 한국어의 자음과 모음을 **모두 한 번씩만 사용하여** 올바른 한국어 단어를 도출하세요.\n동일한 자모가 여러 번 주어진 경우, 주어진 횟수만큼 사용해야 합니다.\n아래 '자음, 모음 표'와 '학습예제'를 참고하여 '단계별 추론 과정'에 따라 최적의 한국어 단어를 도출하세요. \n**자음, 모음 표**:\n자음(초성or종성 가능): ㄱ, ㄴ, ㄷ, ㄹ, ㅁ, ㅂ, ㅅ, ㅇ, ㅈ, ㅊ, ㅋ, ㅌ, ㅍ, ㅎ\n겹받침(종성 전용): ㄳ, ㄵ, ㄶ, ㄺ, ㄻ, ㄼ, ㄽ, ㄾ, ㄿ, ㅀ, ㅄ\n모음(중성): ㅏ, ㅑ, ㅓ, ㅕ, ㅗ, ㅛ, ㅜ, ㅠ, ㅡ, ㅣ, ㅐ, ㅔ, ㅒ, ㅖ, ㅘ, ㅙ, ㅚ, ㅝ, ㅞ, ㅟ, ㅢ \n**단계별 추론 과정**: \n1. 입력된 자음과 모음의 빈도 확인:\n    - 자음과 모음으로 분류합니다.\n    - 자모별로 개수를 세어, 조합에 필요한 총 빈도를 기록합니다.\n2. 음절 수 예측\n    - 모음은 중성에서만 사용되므로, 모음의 개수를 기준으로 단어의 음절 수를 예측합니다.  \n3. 초성,중성,종성 조합 생성:\n    - 입력된 자모를 초성(자음), 중성(모음), 종성(자음, 겹받침)으로 분류합니다.\n        1)(초성+중성) 가능 목록\n        2)(초성+중성+종성) 가능 목록\n    - 생성 가능한 모든 조합을 중복하지 않고 나열합니다.\n4. 자모의 빈도와 일치하는 후보 찾기\n    - 생성된 모든 조합 중, 입력된 자모 **빈도가 총 사용량과 일치**하는 후보를 찾습니다.\n    - **후보를 찾을 때, 표준국어대사전에 등재된 단어를 우선 고려하세요.**  \n5. 단어 도출:\n    - 3단계(자모의 빈도와 일치하는 후보 찾기)에서 찾은 후보 중, **단어 1개를 선택합니다.**\n    - **후보가 모두 사전에 등재되지 않은 단어더라도, 입력된 자모를 모두 사용하여 단어를 도출하세요.**\n**학습예제**:\n1. 입력: ㅁ,ㄱ,ㅗ\n    1) 입력된 자음과 모음 빈도 확인:\n    - 자음 목록: ㄱ(1),ㅁ(1),모음 목록: ㅗ(1)\n    - 총 3개의 자모로 구성\n    2) 음절 수 예측:\n    - 모음 수: 1, 따라서 단어는 1음절로 예측\n    3) 초성, 중성, 종성 조합 생성:\n    - 초성+ 중성: 고, 모\n    - 초성+중성+종성 조합: 곡,곰,목,몸\n    4) 자모의 빈도와 일치하는 후보 찾기\n    - 입력된 총 자모 개수: ㄱ(1), ㅁ(1), ㅗ(1)\n    - 후보단어: 곰, 목\n    5) 단어 도출: '곰' 으로 1개 선택함\n2. 입력: ㅣ,ㅄ,ㅏ,ㅓ,ㅇ,ㄱ,ㅊ\n    1) 입력된 자음과 모음 빈도 확인:\n    - 자음 목록: ㄱ(1),ㅇ(1),ㅊ(1),ㅄ(1), 모음 목록: ㅏ(1),ㅓ(1),ㅣ(1)\n    - 총 7개의 자모로 구성\n    - ㅄ은 겹받침(종성) 전용\n    2) 음절 수 예측:\n    - 모음 수: 3, 따라서 단어는 3음절로 예측\n    3) 초성, 중성, 종성 조합 생성:\n    - 초성+ 중성: 가,어,이,아,어,이,차,처,치\n    - 초성+중성+종성 조합: 각,강,갗,값,악,앙,앛,앖,착,창,찿,찺,걱,겅,겇,겂,억,엉,엋,없,척,청,첯,첪,긱,깅,깇,깂,익,잉,잋,잆,칙,칭,칯,칪\n    4) 자모의 빈도와 일치하는 후보 찾기\n    - 입력된 총 자모 개수: ㄱ(1),ㅇ(1),ㅊ(1),ㅄ(1),ㅏ(1),ㅓ(1),ㅣ(1)\n    - 후보단어: 앖기처,값처이,처이값,없거치,없치거,값어치 등등 \n    5) 단어 도출: '값어치'가 표준국어대사전에 등재한 단어기에 선택\n3. 입력: ㅇ, ㅡ, ㅍ, ㅏ , ㄹ, ㅣ,ㄴ, ㅐ, ㅍ, ㅇ\n    1) 입력된 자음과 모음 빈도 확인:\n    - 자음 목록: ㅇ(2), ㅍ(2), ㄹ(1), ㄴ(1), 모음 목록: ㅡ(1), ㅏ(1), ㅣ(1), ㅐ(1)\n    - 총 10개의 자모로 구성됩니다.\n    2) 음절 수 예측:\n    - 모음 수: 4, 따라서 단어는 4음절로 예측됩니다.\n    2) 초성, 중성, 종성 조합:\n    - 초성+중성: 으, 프, 르, 느, 아, 파, 라, 나, 이, 피, 리, 리, 애, 패, 래, 애\n    - 초성+중성+종성 조합: 응, 읖, 을, 은, 픙, 픞,플,픈, 릉, 릎, 를, 른, 능, 늪, 늘, 는\n    3) 자모의 빈도와 일치하는 후보 찾기\n    - 입력된 총 자모 개수: ㅇ(2), ㅍ(2), ㄹ(1), ㄴ(1), ㅡ(1), ㅏ(1), ㅣ(1), ㅐ(1)\n    - 후보단어: 파인애플,이앤팔프,파앵니플,파일애픈 등등\n    4) 단어 도출: '파인애플'이 표준국어대사전에 등재한 단어기에 선택\n출력 형식:\n과정: [간단한 단계별 추론 과정]\n답변: [도출한 단어]**(단어만 출력하세요. 추가 설명을 하지 마세요.)**  "
  },
  "kor_visual_transform.json": {
    "zrs_prompt": "입력된 단어는 원본 단어의 음절과 시각적으로 유사한 음절 대체가 포함된 야민정음 단어입니다. 원본 단어를 도출하세요. **정확한 단어를 찾기 어렵더라도, 가장 유사한 원본 단어를 도출하세요.**\n출력 형식:\n답변: [원본 단어] **(단어만 출력하세요. 추가 설명을 하지 마세요.)**",
    "cot_prompt": "입력된 단어는 원본 단어의 음절과 시각적으로 유사한 음절 대체가 포함된 야민정음 단어입니다. 추론 과정을 참고하여 원본 단어를 추론하세요.\n**단계별 추론 과정**:\n1.음절 분리\n-제시된 단어를 음절 단위로 분리합니다.\n-영어,숫자,특수문자가 포함되어 있어도 분리합니다.\n2.음절 추론\n-분리된 음절과 시각적으로 유사한 원본 한글 음절을 추론합니다.\n3.원본 단어 생성\n-추론한 음절들을 조합하여 원본 단어를 생성합니다.\n-**정확한 단어를 찾기 어렵더라도, 가장 유사한 원본 단어를 도출하세요.**\n출력 형식:\n과정: [간단한 단계별 추론 과정]\n답변: [원본 단어] **(단어만 출력하세요. 추가 설명을 하지 마세요.)**",
    "icl_prompt": "입력된 단어는 원본 단어의 음절과 시각적으로 유사한 음절 대체가 포함된 야민정음 단어입니다. 추론 과정과 예시를 참고하여 원본 단어를 추론하세요.\n**단계별 추론 과정**:\n1.음절 분리\n-제시된 단어를 음절 단위로 분리합니다.\n-영어,숫자,특수문자가 포함되어 있어도 분리합니다.\n2.음절 추론\n-분리된 음절과 시각적으로 유사한 원본 한글 음절을 추론합니다.\n3.원본 단어 생성\n-추론한 음절들을 조합하여 원본 단어를 생성합니다.\n-**정확한 단어를 찾기 어렵더라도, 가장 유사한 원본 단어를 도출하세요.**\n예시\n1.단어: 윾사파학\n추론:\n1)음절 분리: [윾,사,파,학]\n2)음절 추론:\n윾 → 유\n사 → 사 \n파 → 과\n학 → 학\n3)원본 단어 생성: 유사과학\n2.단어: 댁지리 X과일\n추론:\n1)음절 분리: 댁,지,리,x,과,일\n2)음절 추론:\n댁 → 먹\n지 → 거\n리 → 리\nx → x\n과 → 파\n일 → 일\n3)원본 단어 생성: 먹거리 x파일\n3.단어: 네행71\n추론:\n1)음절 분리: 네,행,71\n2)음절 추론:\n네 → 비\n행 → 행\n71 → 기\n3)원본 단어 생성: 비행기\n4.단어: EH양\n추론:\n1)음절 분리: EH,양\n2)음절 추론:\nEH → 태\n양 → 양\n3)원본 단어 생성: 태양\n5.단어: 머전팡역시\n추론:\n1)음절 분리: 머,전,팡,역,시\n2)음절 추론:\n머 → 대\n전 → 전\n팡 → 광\n역 → 역\n시 → 시\n3)원본 단어 생성: 대전광역시\n6.단어: %원\n추론:\n1)음절 분리: %,원\n2)음절 추론:\n% → 응\n원 → 원\n3)원본 단어 생성: 응원\n출력 형식:\n과정: [간단한 단계별 추론 과정]\n답변: [원본 단어] **(단어만 출력하세요. 추가 설명을 하지 마세요.)**"
  },
  "kor_abbreviations": {
    "zrs_prompt": "입력된 단어는 단어나 구의 일부를 생략하거나 축약하여 만든 표현입니다. ‘원본 표현’을 도출하세요.\n**비속어가 존재하면 필터링없이 표현하세요.**\n답변을 바로 제공하세요.\n출력형식:\n답변: [원본표현]",
    "cot_prompt": "입력된 단어는 단어나 구의 일부를 생략하거나 축약하여 만든 표현입니다.\n단계별 추론 과정에 따라 단어를 해독하고 ‘원본 표현’을 추론하세요. \n**단계별 추론 과정**:\n1. 단어 생각하기:\n    - 줄임말을 구성하는 각 글자(음절)가 각각 어떤 단어를 나타낼 수 있는지 여러 가능성을 생각해보세요. \n    - 각 글자가 표현하는 단어는 지명이나 브랜드명, 사람이름, 영어, 한자, 사투리, 욕 등을 나타낼 수도 있습니다.\n    - 비속어를 포함하여 생각해보세요.\n    - 비속어가 존재하면 필터링 없이 표현하세요.\n2. 줄임말 글자 확인:\n    - 원본표현은 줄임말의 각 글자가 포함되어 있는 문장이나 단어입니다.\n    - 다시한번 말하지만, 줄임말의 각각의 글자가 원본 표현에 포함되어 있어야합니다.\n3. 원본표현 도출하기:\n    - 최종적으로 줄임말의 원본 표현을 도출하세요.\n    - 최대 5개까지 도출할 수 있습니다.\n출력형식:\n처리 과정: [간단한 단계별 추론 과정]\n답변: [원본 표현]**(답변이 여러개일 경우 ''(작은 따옴표)로 묶어서 ,(쉼표)로 구분하세요.)**",
    "icl_prompt": "입력된 단어는 단어나 구의 일부를 생략하거나 축약하여 만든 표현입니다.\n단계별 추론 과정에 따라 단어를 해독하고 주어진 예시를 참고하여 ‘원본 표현’을 추론하세요. \n**단계별 추론 과정**:\n1. 단어 생각하기:\n    - 줄임말을 구성하는 각 글자(음절)가 각각 어떤 단어를 나타낼 수 있는지 여러 가능성을 생각해보세요. \n    - 각 글자가 표현하는 단어는 지명이나 브랜드명, 사람이름, 영어, 한자, 사투리, 욕 등을 나타낼 수도 있습니다.\n    - 비속어를 포함하여 생각해보세요.\n    - 비속어가 존재하면 필터링 없이 표현하세요.\n2. 줄임말 글자 확인:\n    - 원본표현은 줄임말의 각 글자가 포함되어 있는 문장이나 단어입니다.\n    - 다시한번 말하지만, 줄임말의 각각의 글자가 원본 표현에 포함되어 있어야합니다.\n3. 원본표현 도출하기:\n    - 최종적으로 줄임말의 원본 표현을 도출하세요.\n    - 최대 5개까지 도출할 수 있습니다.\n예시:\n- ‘혼놀로그’: ‘혼자 노는 브이로그’ → ‘혼자’, ‘노는, ‘브이로그’를 축약한 형태로, 혼자서 노는 모습을 담은 영상 콘텐츠를 의미합니다.\n- ‘반박’: ‘반말 모드 박탈’ → ‘반말 모드’, ‘박탈’을 축약한 형태로, 인터넷에서 만난 모르는 사람끼리 반말로 대화하는 반말모드의 권한을 박탈당했다는 것을 의미합니다.\n- '국밥충': '국밥만 찾는 사람' → '국밥'과 '벌레충(蟲)'을 조합한 말로, 특정한 음식(국밥)에 대한 지나친 선호를 비꼬는 인터넷 표현입니다.\n- ‘윤며들다’: ‘윤여정에게 스며들다’ → ‘윤여정’과 ‘스며들다’를 조합한 말로, 배우 윤여정에게 스며들었다를 의미합니다.\n- ‘오뱅있’: ‘오늘 방송 있나요’ →  ‘오늘, ‘방송’, ‘있나요’를 축약한 형태로, 방송을 뱅송이라고 유머스럽게 표현한 오늘 방송 있나요?라는 표현입니다.\n- ‘선톡’ : ‘먼저선(先)’과 ‘카카오톡’의 합성어로 먼저 카카오톡을 보내는 행위를 나타낸 표현입니다.\n출력형식:\n처리 과정: [간단한 단계별 추론 과정]\n답변: [원본 표현]**(답변이 여러개일 경우 ''(작은 따옴표)로 묶어서 ,(쉼표)로 구분하세요.)**"
  },
  "kor_letter_rotation_90": {
    "zrs_prompt": "입력된 단어는 반시계 방향으로 90도 회전하여 변환된 야민정음 단어입니다. 원본 단어를 추론하세요.\n답변을 바로 제공하세요.\n출력형식:\n답변: [원본단어]",
    "cot_prompt": "입력된 단어는 반시계 방향으로 90도 회전하여 변환된 야민정음 단어입니다. \n단계별 추론과정에 따라 야민정음을 해독하고 '원본 단어'를 추론하세요. \n**단계별 추론 과정**: \n1. 자모 분리: \n- 자음과 모음이 결합된 음절의 경우 자음과 모음을 분리하세요. 단, 모음만으로 이루어진 음절은 분리하지 않습니다. \n- ㅐ를 ㅏㅣ로 분리하지 마세요. ㅒ를 ㅑㅣ로 분리하지마세요. 이런식의 표준모음은 분리하지 마세요. \n- **중요1: \"ㅇ\"과 모음이 결합된 경우, \"ㅇ\"도 반드시 자음으로 인식하여 분리하세요. \"ㅇ\"은 초성에서 음가가 없을 수 있지만, 야민정음 해독 과정에서는 하나의 문자로 간주합니다. **\n- **중요2: 음절분리시에는 추론하지말고 분리만 진행하세요.** \n2. 글자별 90도 회전: \n- 각 자음과 모음을 모두 반시계 방향으로 90도 돌린 문자이니 시계방향으로 90도 회전하여 유사한 문자를 찾아 원본 문자를 추론하세요. \n- 자음과 모음 모두 시계방향 90도 회전합니다. \n- 한국어의 자음과 모음이 아닌 문자나 기호 등도 한국어의 자음,모음, 음절 중 유사한 문자로 변환하여 추론해보세요. \n- 분리된 음절 → 회전시킨 음절\n3. 복원된 목록 나열: \n- 변환된 글자 목록 생성: 2단계(\"글자별 90도 회전\")에서 얻은 각 글자의 변환 결과를 순서대로 나열하여 목록을 만듭니다. \n4. 단어조합 \n- 나열된 목록의 글자들을 순서대로 결합하여 최종 복원된 단어를 생성합니다.\n- **정확한 단어를 찾기 어렵더라도, 원본과 가장 가까운 '원본 단어' 1개를 도출하세요.**\n출력 형식:\n과정: [간단한 단계별 추론 과정]\n답변: [원본 단어]**(단어만 출력하세요. 추가 설명을 하지 마세요.)**",
    "icl_prompt": "입력된 단어는 반시계 방향으로 90도 회전하여 변환된 야민정음 단어입니다. \n단계별 추론과정에 따라 야민정음을 해독하고 주어진 학습예제를 참고하여 '원본 단어'를 추론하세요. \n**단계별 추론 과정**: \n1. 자모 분리: \n- 자음과 모음이 결합된 음절의 경우 자음과 모음을 분리하세요. 단, 모음만으로 이루어진 음절은 분리하지 않습니다. \n- ㅐ를 ㅏㅣ로 분리하지 마세요. ㅒ를 ㅑㅣ로 분리하지마세요. 이런식의 표준모음은 분리하지 마세요. \n- **중요1: \"ㅇ\"과 모음이 결합된 경우, \"ㅇ\"도 반드시 자음으로 인식하여 분리하세요. \"ㅇ\"은 초성에서 음가가 없을 수 있지만, 야민정음 해독 과정에서는 하나의 문자로 간주합니다. **\n- **중요2: 음절분리시에는 추론하지말고 분리만 진행하세요.** \n2. 글자별 90도 회전: \n- 각 자음과 모음을 모두 반시계 방향으로 90도 돌린 문자이니 시계방향으로 90도 회전하여 유사한 문자를 찾아 원본 문자를 추론하세요. \n- 자음과 모음 모두 시계방향 90도 회전합니다. \n- 한국어의 자음과 모음이 아닌 문자나 기호 등도 한국어의 자음,모음, 음절 중 유사한 문자로 변환하여 추론해보세요. \n- 분리된 음절 → 회전시킨 음절\n3. 복원된 목록 나열: \n- 변환된 글자 목록 생성: 2단계(\"글자별 90도 회전\")에서 얻은 각 글자의 변환 결과를 순서대로 나열하여 목록을 만듭니다. \n4. 단어조합 \n- 나열된 목록의 글자들을 순서대로 결합하여 최종 복원된 단어를 생성합니다. \n- **정확한 단어를 찾기 어렵더라도, 원본과 가장 가까운 '원본 단어' 1개를 도출하세요.**\n학습예제:\n1. 단어: 버0 Fㅓ텨\n   - 분석:\n     1) 버 → 또\n     2) 0 → ㅇ\n     3) F → ㄲ\n     4) ㅓ → ㅗ\n     5) E → ㅆ\n     6) ㅕ → ㅛ\n   - 원본 단어: 똥꼬쇼\n2. 단어: ㅓㆆ어<ㅣ\n   - 분석:\n     1) ㅓ → ㅗ\n     2) ㆆ → 이\n     3) ㅇ → ㅇ\n     4) ㅓ → ㅗ\n     2) < → ㅅ\n     3) ㅣ → ㅡ\n   - 원본 단어: 히오스\n3. 단어: 야Jㅓ아\n   - 분석:\n     1) ㅇ → ㅇ\n     2) ㅑ → ㅠ\n     3) J → ㄴ\n     4) ㅓㅇ → ㅎ\n     5) ㅏ → ㅜ\n   - 원본 단어: 윤후\n4. 단어: Γㅓㅇ여ㅇ마Nㅒㅏㅁ\n   - 분석:\n     1) Γ → ㄱ\n     2) ㅓ → ㅗ\n     3) ㅇ → ㅇ\n     4) ㅇ → ㅇ\n     5) ㅕ → ㅛ\n     6) ㅇ → ㅇ\n     7) ㅁ → ㅁ\n     8) ㅏ → ㅜ\n     9) N → ㄹ\n     10) ㅒ → ㅍ\n     11) ㅏ → ㅜ\n     12) ㅁ → ㅁ\n   - 원본 단어: 공용물품\n5. 단어: lKㅏNㅎㅓㅇㅣJ\n   - 분석:\n     1) lK → ㅊ\n     2) ㅏ → ㅜ\n     3) N → ㄹ\n     4) ㅎ → 아\n     5) ㅓㅇ → ㅎ\n     6) ㅣ → ㅡ\n     7) J → ㄴ\n   - 원본 단어: 출아흔\n6. 단어: ㅇ丁고ㅓKㅏ\n   - 분석:\n     1) ㅇ → ㅇ\n     2) 丁 → ㅢ\n     3) 고 → ㅂ\n     4) ㅓ → ㅗ\n     5) K → ㅈ\n     6) ㅏ → ㅜ\n   - 원본 단어: 의보주\n출력 형식:\n과정: [간단한 단계별 추론 과정]\n답변: [원본 단어]**(단어만 출력하세요. 추가 설명을 하지 마세요.)**"
  },
  "kor_letter_rotation_180": {
    "zrs_prompt": "입력된 단어는 반시계 방향으로 180도 회전하여 변환된 야민정음 단어입니다. 원본 단어를 도출하세요.\n**정확한 단어를 찾기 어렵더라도, 원본과 가장 가까운 '원본 단어'를 도출하세요.**\n답변을 바로 제공하세요.\n출력형식:\n답변: [원본 단어]",
    "cot_prompt": "입력된 단어는 반시계 방향으로 180도 회전하여 변환된 야민정음 단어입니다. \n단계별 추론 과정에 따라 야민정음을 해독하고 '원본 단어'를 추론하세요. \n**단계별 추론 과정**: \n1. 자모 분리: \n- 자음과 모음이 결합된 경우 자음과 모음을 분리하세요. 단, 모음만으로 이루어진 음절은 분리하지 않습니다. \n- ㅐ를 ㅏㅣ로 분리하지 마세요. ㅒ를 ㅑㅣ로 분리하지마세요. 이런식의 표준모음은 분리하지 마세요. \n- **중요1: \"ㅇ\"과 모음이 결합된 경우, \"ㅇ\"도 반드시 자음으로 인식하여 분리하세요. \"ㅇ\"은 초성에서 음가가 없을 수 있지만, 야민정음 해독 과정에서는 하나의 문자로 간주합니다. **\n- **중요2: 자모분리시에는 추론하지말고 분리만 진행하세요.** \n2. 글자별 180도 회전: \n- 각 자음과 모음을 모두 반시계 방향으로 180도 돌린 문자이니 시계방향으로 180도 회전하여 유사한 문자를 찾아 원본 문자를 추론하세요.\n- 자음과 모음 모두 시계방향 180도 회전합니다.\n- 한국어의 자음과 모음이 아닌 문자나 기호 등도 한국어의 자음,모음, 음절 중 유사한 문자로 변환하여 추론해보세요.\n3. 복원된 목록 나열: \n- 변환된 글자 목록 생성: 2단계(\"글자별 180도 회전\")에서 얻은 각 글자의 변환 결과를 순서대로 나열하여 목록을 만듭니다. \n4. 역순 재배열: \n- 3단계(\"복원된 목록 나열\")의 목록을 역순으로 재배열합니다. 즉, 목록의 마지막 요소부터 첫 번째 요소까지 순서대로 새로운 목록을 생성합니다.\n5. 단어조합 \n- 4단계(\"역순 재배열\")된 목록의 글자들을 순서대로 **결합**하여 최종 복원된 '원본 단어'를 생성합니다.\n- **정확한 단어를 찾기 어렵더라도, 반드시 원본과 가장 가까운 '원본 단어'를 도출하세요.**\n\n출력 형식:\n과정: [간단한 단계별 추론 과정]\n답변: [원본 단어]**(단어만 출력하세요. 추가 설명을 하지 마세요.)**  ",
    "icl_prompt": "입력된 단어는 반시계 방향으로 180도 회전하여 변환된 야민정음 단어입니다. \n단계별 추론 과정에 따라 야민정음을 해독하고 주어진 학습예제를 참고하여 '원본 단어'를 추론하세요. \n**단계별 추론 과정**: \n1. 자모 분리: \n- 자음과 모음이 결합된 경우 자음과 모음을 분리하세요. 단, 모음만으로 이루어진 음절은 분리하지 않습니다. \n- ㅐ를 ㅏㅣ로 분리하지 마세요. ㅒ를 ㅑㅣ로 분리하지마세요. 이런식의 표준모음은 분리하지 마세요. \n- **중요1: \"ㅇ\"과 모음이 결합된 경우, \"ㅇ\"도 반드시 자음으로 인식하여 분리하세요. \"ㅇ\"은 초성에서 음가가 없을 수 있지만, 야민정음 해독 과정에서는 하나의 문자로 간주합니다. **\n- **중요2: 자모분리시에는 추론하지말고 분리만 진행하세요.** \n2. 글자별 180도 회전: \n- 각 자음과 모음을 모두 반시계 방향으로 180도 돌린 문자이니 시계방향으로 180도 회전하여 유사한 문자를 찾아 원본 문자를 추론하세요.\n- 자음과 모음 모두 시계방향 180도 회전합니다.\n- 한국어의 자음과 모음이 아닌 문자나 기호 등도 한국어의 자음,모음, 음절 중 유사한 문자로 변환하여 추론해보세요.\n3. 복원된 목록 나열: \n- 변환된 글자 목록 생성: 2단계(\"글자별 180도 회전\")에서 얻은 각 글자의 변환 결과를 순서대로 나열하여 목록을 만듭니다. \n4. 역순 재배열: \n- 3단계(\"복원된 목록 나열\")의 목록을 역순으로 재배열합니다. 즉, 목록의 마지막 요소부터 첫 번째 요소까지 순서대로 새로운 목록을 생성합니다.\n5. 단어조합 \n- 4단계(\"역순 재배열\")된 목록의 글자들을 순서대로 결합하여 최종 복원된 '원본 단어'를 생성합니다.\n- **정확한 단어를 찾기 어렵더라도, 원본과 가장 가까운 '원본 단어'를 도출하세요.**\n학습예제:\n1. 단어: 운ㅣㅏVㅏㅇ\n추론:\n    1) 음절 분리: ㅇ,ㅜ,ㄴ,ㅣ,ㅏ, V,ㅏ,ㅇ\n    2) 글자별 180도 회전: \n    - ㅇ → ㅇ\n    - ㅜ → ㅗ\n    - ㄴ → ㄱ\n    - ㅣ→ ㅣ\n    - ㅏ → ㅓ\n    - V→ ㅅ\n    - ㅏ → ㅓ\n    - ㅇ → ㅇ\n    3) 복원된 목록 나열: ㅇ,ㅗ,ㄱ,ㅣ,ㅓ,ㅅ,ㅓ,ㅇ\n    4) 역순 재배열 : ㅇ,ㅓ,ㅅ,ㅓ,ㅣ,ㄱ,ㅗ,ㅇ\n    5) 원본 단어: 어세공\n2. 단어: ㅐ그ㅏVㅣㄴㅣㅏと온\n추론:\n    1) 음절 분리: ㅐ,ㄱ,ㅡ, ㅏ, V,ㅣ,ㄴ,ㅣ,ㅏ,と,ㅇ,ㅗ,ㄴ\n    2) 글자 회전: \n    - ㅐ → ㅐ\n    - ㄱ→ ㄴ\n    - ㅡ → ㅡ\n    - ㅏ→ ㅓ\n    - V→ ㅅ\n    - ㅣ → ㅣ\n    - ㄴ → ㄱ\n    - ㅣ → ㅣ\n    - ㅏ → ㅓ\n    - と→ ㅈ\n    - ㅇ → ㅇ\n    - ㅗ → ㅜ\n    - ㄴ → ㄱ\n    3) 복원된 목록 나열: ㅐ,ㄴ,ㅡ,ㅓ,ㅅ,ㅣ,ㄱ,ㅣ,ㅓ,ㅈ,ㅇ,ㅜ,ㄱ\n    4) 역순 재배열 : ㄱ,ㅜ,ㅇ,ㅈ,ㅓ,ㅣ,ㄱ,ㅣ,ㅅ,ㅓ,ㅡ,ㄴ,ㅐ\n    - ㄴ,ㅡ 조합 불가하여 유사한 문자 찾아 원본 추론 -> ㄷ \n    5) 원본 단어: 궁제기서대\n3. 단어: ㅑAAㅣㄹㅏㅁ룬\n추론:\n    1) 음절 분리: ㅑ,A,A,ㅣ,ㄹ,ㅏ,ㅁ,ㄹ,ㅜ,ㄴ\n    2) 글자 회전: \n    - ㅑ → ㅕ\n    - A → ㅂ\n    - A → ㅂ\n    - l→ ㅣ\n    - ㄹ → ㄹ\n    - ㅏ→ ㅓ\n    - ㅁ → ㅁ\n    - ㄹ → ㄹ\n    - ㅜ → ㅗ\n    - ㄴ → ㄱ\n    3) 복원된 목록 나열: ㅕ,ㅂ,ㅂ,ㅣ,ㄹ,ㅓ,ㅁ,ㄹ,ㅗ,ㄱ\n    4) 역순 재배열 :ㄱ,ㅗ,ㄹ,ㅁ,ㅓ,ㄹ,ㅣ,ㅂ,ㅂ,ㅕ\n    - ㅂ,ㅂ, 조합 불가하여 유사 문자 찾아 원본 추론 -> ㅃ\n    5) 원본 단어: 골머리뼈\n출력 형식:\n과정: [간단한 단계별 추론 과정]\n답변: [원본 단어]**(단어만 출력하세요. 추가 설명을 하지 마세요.)**  "
  },
  "kor_letter_rotation_270": {
    "zrs_prompt": "입력된 단어는 원본 단어를 반시계 방향으로 270도 회전하여 변환된 야민정음 단어입니다. 원본 단어를 도출하세요. **정확한 단어를 찾기 어렵더라도, 가장 유사한 원본 단어를 도출하세요.**\n출력 형식:\n답변: [원본 단어] **(단어만 출력하세요. 추가 설명을 하지 마세요.)**",
    "cot_prompt": "입력된 단어는 원본 단어를 반시계 방향으로 270도 회전하여 변환된 야민정음 단어입니다. 단계별 추론 과정을 참고하여 원본 단어를 추론하세요.\n**단계별 추론 과정**:\n1.자모 분리\n-음절별로 자음과 모음으로 분리합니다.\n-영어,숫자,특수문자가 포함되어 있어도 분리합니다.\n-**중요1:\"\"ㅇ\"과 모음이 결합된 경우 \"ㅇ\"도 반드시 자음으로 인식하여 분리하세요.**\n-**중요2:자모 분리 시,추론하지말고 분리만 진행하세요.**\n-예)\"므ㅏJㅏJ\" → \"ㅁ,ㅡ,ㅏ,J,ㅏ,J\" \n2.자모 나열\n-음절별로 분리된 자음과 모음을 왼쪽에서부터 \"(종성),중성,초성\" 순서로 나열합니다.\n-예) \"ㅁ,ㅡ,ㅏ,J,ㅏ,J\" → \"ㅡ,ㅁ,ㅏ,J,ㅏ,J\"\n3.역순 변환\n-나열된 자음과 모음을 역순으로 변환합니다..\n-예) “ㅡ,ㅁ,ㅏ,J,ㅏ,J”  → “J,ㅏ,J,ㅏ,ㅁ,ㅡ”\n4.글자별 270도 회전\n-각 자음과 모음 모두 시계 방향으로 270도 회전시킨 후, 원본 한국어 문자를 추론합니다.\n-한국어의 자음과 모음이 아닌 문자도 270도 회전시킨 후, 원본 한국어 문자를 추론합니다.\n5.추론된 글자 목록 생성\n-\"4.글자별 270도 회전\"에서 얻은 각 문자의 추론 결과를 순서대로 나열하여 목록을 생성합니다.\n6.원본 단어 생성\n-\"5.추론된 글자 목록 생성\"의 글자 목록을 순서대로 조합하여 원본 단어를 생성합니다.\n-**정확한 단어를 찾기 어렵더라도, 가장 유사한 원본 단어를 도출하세요.**\n출력 형식:\n과정: [간단한 단계별 추론 과정]\n답변: [원본 단어] **(단어만 출력하세요. 추가 설명을 하지 마세요.)**",
    "icl_prompt": "입력된 단어는 원본 단어를 반시계 방향으로 270도 회전하여 변환된 야민정음 단어입니다. 단계별 추론 과정과 예시를 참고하여 원본 단어를 추론하세요.\n**단계별 추론 과정**:\n1.자모 분리\n-음절별로 자음과 모음으로 분리합니다.\n-영어,숫자,특수문자가 포함되어 있어도 분리합니다.\n-**중요1:\"ㅇ\"과 모음이 결합된 경우 \"ㅇ\"도 반드시 자음으로 인식하여 분리하세요.**\n-**중요2:자모 분리 시,추론하지말고 분리만 진행하세요.**\n-예)\"므ㅏJㅏJ\" → \"ㅁ,ㅡ,ㅏ,J,ㅏ,J\" \n2.자모 나열\n-음절별로 분리된 자음과 모음을 왼쪽에서부터 \"(종성),중성,초성\" 순서로 나열합니다.\n-예) \"ㅁ,ㅡ,ㅏ,J,ㅏ,J\" → \"ㅡ,ㅁ,ㅏ,J,ㅏ,J\"\n3.역순 변환\n-나열된 자음과 모음을 역순으로 변환합니다..\n-예) “ㅡ,ㅁ,ㅏ,J,ㅏ,J”  → “J,ㅏ,J,ㅏ,ㅁ,ㅡ”\n4.글자별 270도 회전\n-각 자음과 모음 모두 시계 방향으로 270도 회전시킨 후, 원본 한국어 문자를 추론합니다.\n-한국어의 자음과 모음이 아닌 문자도 270도 회전시킨 후, 원본 한국어 문자를 추론합니다.\n5.추론된 글자 목록 생성\n-\"4.글자별 270도 회전\"에서 얻은 각 문자의 추론 결과를 순서대로 나열하여 목록을 생성합니다.\n6.원본 단어 생성\n-\"5.추론된 글자 목록 생성\"의 글자 목록을 순서대로 조합하여 원본 단어를 생성합니다.\n-**정확한 단어를 찾기 어렵더라도, 가장 유사한 원본 단어를 도출하세요.**\n예시:\n1.단어: N으아ㆬ\n추론:\n1)자모 분리: N,ㅇ,ㅡ,ㅇ,ㅏ,ㆬ\n2)자모 나열: N, ㅡ, ㅇ, ㅏ,ㅇ ㆬ\n3)역순 변환: ㆬ, ㅇ, ㅏ, ㅇ, ㅡ, N\n4)회전:\nㆬ → ㅌ\nㅇ → ㅇ\nㅏ → ㅗ\nㅇ → ㅇ\nㅡ → ㅣ\nN → ㄹ\n원본 단어: 통일\n2.단어: ㅓJ유ㅏNㅣㅒ\n추론:\n1)자모 분리: ㅓ,J,ㅇ,ㅠ,ㅏ,N,ㅣ,ㅒ\n2)자모 나열: ㅓ,J,ㅠ,ㅇ,ㅏN,ㅣ,ㅒ\n3)역순 변환: ㅒ,ㅣ,N,ㅏ,ㅇ,ㅠ,J,ㅓ\n4)회전:\nㅒ → ㅍ\nㅣ → ㅡ\nN → ㄹ\nㅏ → ㅗ\nㅇ → ㅇ\nㅠ → ㅑ\nJ → ㄱ\nㅓ → ㅜ\n원본 단어: 프로야구\n3.단어: 으r뚜으Nㅓ>ㅏ\n추론:\n1)자모 분리: ㅇ,ㅡ,ㄸ,ㅜ,ㅇ,ㅡ,N,ㅓ,>,ㅏ\n2)자모 나열: ㅡ, ㅇ, r, ㅜ, ㄸ, ㅡ, ㅇ, N, ㅓ, >,ㅏ\n3)역순 변환: ㅏ,>,ㅓ,N,ㅇ,ㅡ,ㄸ,ㅜ,r,ㅇ,ㅡ\n4)회전:\nㅏ,> → ㅊ\nㅓ → ㅜ\nN → ㄹ\nㅇ → ㅇ\nㅡ → ㅣ\nㄸ → ㅂ\nㅜ → ㅏ\n r → ㄴ\nㅇ → ㅇ\nㅡ → ㅣ\n원본 단어: 출이반이\n4.단어: r수부\n추론:\n1)자모 분리: r,ㅅ,ㅜ,ㅂ,ㅜ\n2)자모 나열: r,ㅜ,ㅅ,ㅜ,ㅂ\n3)역순 변환: ㅂ,ㅜ,ㅅ,ㅜ,r\n4)회전:\nㅂ,ㅜ → 과\nㅅ → ㄷ\nㅜ → ㅏ\nr → ㄴ\n원본 단어: 과단\n5.단어: 上아N뚀ㅏJ\n추론:\n1)자모 분리: 上,ㅇ,ㅏ,N,ㄸ,ㅛ,ㅏ,J \n2)자모 나열: 上,ㅏ,ㅇ,N,ㅛ,ㄸ,ㅏ,J\n3)역순 변환: J,ㅏ,ㄸ,ㅛ,N,ㅇ,ㅏ,上\n4)회전:\nJ → ㄱ\nㅏ → ㅗ\nㄸ → ㅂ\nㅛ → ㅕ\nN → ㄹ\nㅇ,ㅏ → ㅎ\n 上 → ㅚ\n원본 단어: 고별회\t\n6.단어:r묘r무丄ㅇJㅣㅅ\n추론:\n1)자모 분리: r,ㅁ,ㅛ,r,ㅁ,ㅜ,丄,ㅇ,J,ㅣㅅ\n2)자모 나열: r,ㅛ,ㅁ,r,ㅜ,ㅁ,丄,ㅇ,J,ㅣ,ㅅ\n3)역순 변환: ㅅ,ㅣ,J,ㅇ,丄,ㅁ,ㅜ,r,ㅁ,ㅛ,r\n4)회전:\nㅅ → ㄷ\nㅣ → ㅡ\nJ → ㄱ\nㅇ → ㅇ\n丄 → ㅢ\nㅁ → ㅁ\nㅜ → ㅏ\nr → ㄴ\nㅁ → ㅁ\nㅛ → ㅕ\nr → ㄴ\n원본 단어: 득의만면\n출력 형식:\n과정: [간단한 단계별 추론 과정]\n답변: [원본 단어] **(단어만 출력하세요. 추가 설명을 하지 마세요.)**"
  }
}